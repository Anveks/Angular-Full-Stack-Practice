{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/sylva/OneDrive/Documents/GitHub/Angular-Full-Stack-Practice-/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllGenres() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this.http.get(appConfig.genresURL);\n      const genres = yield firstValueFrom(observable);\n      return genres;\n    })();\n  }\n  getGames(id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this2.http.get(appConfig.getGamesByGenresURL + id);\n      const games = yield firstValueFrom(observable);\n      return games;\n    })();\n  }\n  addGame(game) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // using formData to create an object:\n      const formData = new FormData();\n      formData.append(\"genreId\", game.genreId.toString());\n      formData.append(\"description\", game.description);\n      formData.append(\"releaseDate\", game.releaseDate.toString());\n      formData.append(\"price\", game.price.toString());\n      formData.append(\"name\", game.name);\n      console.log(formData);\n      const observable = _this3.http.post(appConfig.gamesURL, formData);\n      const addedGame = yield firstValueFrom(observable);\n      console.log(addedGame);\n    })();\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,cAAc,QAAQ,MAAM;;;AAOrC,OAAM,MAAOC,WAAW;EAEpBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAE3BC,YAAY;IAAA;IAAA;MACrB,MAAMC,UAAU,GAAG,KAAI,CAACF,IAAI,CAACG,GAAG,CAAeP,SAAS,CAACQ,SAAS,CAAC;MACnE,MAAMC,MAAM,SAASR,cAAc,CAACK,UAAU,CAAC;MAC/C,OAAOG,MAAM;IAAC;EAClB;EAEaC,QAAQ,CAACC,EAAU;IAAA;IAAA;MAC5B,MAAML,UAAU,GAAG,MAAI,CAACF,IAAI,CAACG,GAAG,CAAcP,SAAS,CAACY,mBAAmB,GAAGD,EAAE,CAAC;MACjF,MAAME,KAAK,SAASZ,cAAc,CAACK,UAAU,CAAC;MAC9C,OAAOO,KAAK;IAAC;EACjB;EAEaC,OAAO,CAACC,IAAe;IAAA;IAAA;MAChC;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEH,IAAI,CAACI,OAAO,CAACC,QAAQ,EAAE,CAAC;MACnDJ,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,IAAI,CAACM,WAAW,CAAC;MAChDL,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,IAAI,CAACO,WAAW,CAACF,QAAQ,EAAE,CAAC;MAC3DJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,IAAI,CAACQ,KAAK,CAACH,QAAQ,EAAE,CAAC;MAC/CJ,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAACS,IAAI,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;MAGrB,MAAMV,UAAU,GAAG,MAAI,CAACF,IAAI,CAACuB,IAAI,CAAY3B,SAAS,CAAC4B,QAAQ,EAAEZ,QAAQ,CAAC;MAE1E,MAAMa,SAAS,SAAS5B,cAAc,CAACK,UAAU,CAAC;MAClDmB,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC;IAAC;EAE3B;;AAhCS3B,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA4B,SAAX5B,WAAW;EAAA6B,YAFR;AAAM","names":["appConfig","firstValueFrom","DataService","constructor","http","getAllGenres","observable","get","genresURL","genres","getGames","id","getGamesByGenresURL","games","addGame","game","formData","FormData","append","genreId","toString","description","releaseDate","price","name","console","log","post","gamesURL","addedGame","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sylva\\OneDrive\\Documents\\GitHub\\Angular-Full-Stack-Practice-\\Frontend\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from \"rxjs\";\nimport { GenreModel } from '../models/genre-model';\nimport { GameModel } from '../models/game-model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n\n    constructor(private http: HttpClient) { }\n\n    public async getAllGenres(): Promise<GenreModel[]>{\n        const observable = this.http.get<GenreModel[]>(appConfig.genresURL);\n        const genres = await firstValueFrom(observable);\n        return genres;\n    }\n\n    public async getGames(id: number): Promise<GameModel[]>{\n        const observable = this.http.get<GameModel[]>(appConfig.getGamesByGenresURL + id);\n        const games = await firstValueFrom(observable);\n        return games;\n    }\n\n    public async addGame(game: GameModel): Promise<void>{\n        // using formData to create an object:\n        const formData = new FormData();\n        formData.append(\"genreId\", game.genreId.toString());\n        formData.append(\"description\", game.description);\n        formData.append(\"releaseDate\", game.releaseDate.toString());\n        formData.append(\"price\", game.price.toString());\n        formData.append(\"name\", game.name);\n        console.log(formData);\n        \n\n        const observable = this.http.post<GameModel>(appConfig.gamesURL, formData);\n\n        const addedGame = await firstValueFrom(observable);\n        console.log(addedGame);\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}