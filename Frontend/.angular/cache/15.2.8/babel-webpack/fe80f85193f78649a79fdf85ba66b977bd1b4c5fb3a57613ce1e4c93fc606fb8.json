{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"src/app/services/notify.service\";\nimport * as i3 from \"@angular/forms\";\nexport class InsertComponent {\n  constructor(dataService, notifyService) {\n    this.dataService = dataService;\n    this.notifyService = notifyService;\n    this.categories = [];\n  }\n}\nInsertComponent.ɵfac = function InsertComponent_Factory(t) {\n  return new (t || InsertComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.NotifyService));\n};\nInsertComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InsertComponent,\n  selectors: [[\"app-insert\"]],\n  decls: 17,\n  vars: 0,\n  consts: [[\"ngNativeValidate\", \"\"], [\"type\", \"text\", \"name\", \"title\"], [\"name\", \"category\"], [\"selected\", \"\", \"disabled\", \"\"], [\"type\", \"number\", \"name\", \"price\"], [\"type\", \"text\", \"name\", \"description\"]],\n  template: function InsertComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Add a new game: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0)(3, \"label\");\n      i0.ɵɵtext(4, \"Title: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 1);\n      i0.ɵɵelementStart(6, \"label\");\n      i0.ɵɵtext(7, \"Category: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 2)(9, \"option\", 3);\n      i0.ɵɵtext(10, \" Select a category... \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"label\");\n      i0.ɵɵtext(12, \"Price: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 4);\n      i0.ɵɵelementStart(14, \"label\");\n      i0.ɵɵtext(15, \"Description: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 5);\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"form[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  width: 50%;\\r\\n  margin: 0 auto;\\r\\n  text-align: left;\\r\\n  background-color: lightgrey;\\r\\n  padding: 10px;\\r\\n  border-radius: 12px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n  padding: 10px;\\r\\n  border-radius: 3px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXRhLWFyZWEvaW5zZXJ0L2luc2VydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixVQUFVO0VBQ1YsY0FBYztFQUNkLGdCQUFnQjtFQUNoQiwyQkFBMkI7RUFDM0IsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2Isa0JBQWtCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBib3JkZXItcmFkaXVzOiAxMnB4O1xyXG59XHJcblxyXG5mb3JtID4gaW5wdXQsIHNlbGVjdCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,eAAe;EAExBC,YAA2BC,WAAwB,EAAUC,aAA4B;IAA9D,gBAAW,GAAXD,WAAW;IAAuB,kBAAa,GAAbC,aAAa;IACnE,eAAU,GAAoB,EAAE;EADsD;;AAFpFH,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAI;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV5BC,0BAAI;MAAAA,gCAAgB;MAAAA,iBAAK;MACzBA,+BAAuB;MAEdA,uBAAO;MAAAA,iBAAQ;MACtBA,2BAAkC;MAElCA,6BAAO;MAAAA,0BAAU;MAAAA,iBAAQ;MACzBA,iCAAwB;MACKA,uCAAqB;MAAAA,iBAAS;MAI3DA,8BAAO;MAAAA,wBAAO;MAAAA,iBAAQ;MACtBA,4BAAoC;MAEpCA,8BAAO;MAAAA,8BAAa;MAAAA,iBAAQ;MAC5BA,4BAAsC;MAExCA,iBAAO","names":["InsertComponent","constructor","dataService","notifyService","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\sylva\\OneDrive\\Documents\\GitHub\\Angular-Full-Stack-Practice-\\Frontend\\src\\app\\components\\data-area\\insert\\insert.component.ts","C:\\Users\\sylva\\OneDrive\\Documents\\GitHub\\Angular-Full-Stack-Practice-\\Frontend\\src\\app\\components\\data-area\\insert\\insert.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport CategoryModel from 'src/app/models/category-model';\nimport { DataService } from 'src/app/services/data.service';\nimport { NotifyService } from 'src/app/services/notify.service';\n\n@Component({\n    selector: 'app-insert',\n    templateUrl: './insert.component.html',\n    styleUrls: ['./insert.component.css']\n})\nexport class InsertComponent {\n\n    public constructor(private dataService: DataService, private notifyService: NotifyService) { }\n    public categories: CategoryModel[] = []\n\n\n\n}\n","<h3>Add a new game: </h3>\n<form ngNativeValidate>\n\n  <label>Title: </label>\n  <input type=\"text\" name=\"title\" />\n\n  <label>Category: </label>\n  <select name=\"category\">\n    <option selected disabled> Select a category... </option>\n    <!-- ng for -->\n  </select>\n\n  <label>Price: </label>\n  <input type=\"number\" name=\"price\" />\n\n  <label>Description: </label>\n  <input type=\"text\" name=\"description\">\n\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}