{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/sylva/OneDrive/Documents/GitHub/Angular-Full-Stack-Practice-/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"src/app/services/notify.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../game-card/game-card.component\";\nfunction ListComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r2._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r2.name);\n  }\n}\nfunction ListComponent_app_game_card_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-game-card\", 8);\n    i0.ɵɵlistener(\"deleteMe\", function ListComponent_app_game_card_11_Template_app_game_card_deleteMe_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteThisGame($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const g_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"game\", g_r3);\n  }\n}\nexport class ListComponent {\n  constructor(dataService, notifyService) {\n    this.dataService = dataService;\n    this.notifyService = notifyService;\n    this.categories = [];\n    this.games = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.categories = yield _this.dataService.getAllCategories();\n      } catch (err) {\n        _this.notifyService.error(err);\n      }\n    })();\n  }\n  handleChange(e) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.games = yield _this2.dataService.getGamesByCategories(e.value);\n        console.log(_this2.games);\n      } catch (err) {\n        _this2.notifyService.error(err);\n      }\n    })();\n  }\n  handleSearch(e) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        e.value.length === 0 ? _this3.games = [] : _this3.games = yield _this3.dataService.getGamesBySearch(e.value);\n      } catch (err) {\n        _this3.notifyService.error(err);\n      }\n    })();\n  }\n  deleteThisGame(id) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this4.dataService.deleteGame(id);\n        _this4.notifyService.success(\"Game has been deleted.\");\n        const index = _this4.games.findIndex(g => g._id === id);\n        _this4.games.splice(index, 1);\n      } catch (err) {\n        _this4.notifyService.error(err.message);\n      }\n    })();\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.NotifyService));\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 14,\n  vars: 4,\n  consts: [[\"for\", \"\"], [\"name\", \"\", 3, \"change\"], [\"selected\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 3, \"change\"], [1, \"cards\"], [3, \"game\", \"deleteMe\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"game\", \"deleteMe\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"label\", 0);\n      i0.ɵɵtext(2, \"Select a category:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 1);\n      i0.ɵɵlistener(\"change\", function ListComponent_Template_select_change_3_listener($event) {\n        return ctx.handleChange($event.target);\n      });\n      i0.ɵɵelementStart(4, \"option\", 2);\n      i0.ɵɵtext(5, \" Category... \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, ListComponent_option_6_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\");\n      i0.ɵɵtext(8, \" | Or try searching a specific game: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 4);\n      i0.ɵɵlistener(\"change\", function ListComponent_Template_input_change_9_listener($event) {\n        return ctx.handleSearch($event.target);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5);\n      i0.ɵɵtemplate(11, ListComponent_app_game_card_11_Template, 1, 1, \"app-game-card\", 6);\n      i0.ɵɵelementStart(12, \"h3\");\n      i0.ɵɵtext(13, \" The games will be displayed here. \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.games);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"display\", ctx.games.length > 0 ? \"inline\" : \"none\");\n    }\n  },\n  dependencies: [i3.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i5.GameCardComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAMIA,iCAAmE;IAAAA,YAAiB;IAAAA,iBAAS;;;;IAAjDA,uCAAsB;IAACA,eAAiB;IAAjBA,sCAAiB;;;;;;IAOpFA,wCAAsF;IAApCA;MAAAA;MAAA;MAAA,OAAYA,4CAAsB;IAAA,EAAC;IAACA,iBAAgB;;;;IAA/DA,2BAAU;;;ACFrD,OAAM,MAAOC,aAAa;EAEtBC,YAA2BC,WAAwB,EAAUC,aAA4B;IAA9D,gBAAW,GAAXD,WAAW;IAAuB,kBAAa,GAAbC,aAAa;IAEnE,eAAU,GAAoB,EAAE;IAChC,UAAK,GAAgB,EAAE;EAH+D;EAKhFC,QAAQ;IAAA;IAAA;MACjB,IAAI;QACA,KAAI,CAACC,UAAU,SAAS,KAAI,CAACH,WAAW,CAACI,gBAAgB,EAAE;OAC9D,CAAC,OAAMC,GAAQ,EAAE;QACd,KAAI,CAACJ,aAAa,CAACK,KAAK,CAACD,GAAG,CAAC;;IAChC;EACL;EAEaE,YAAY,CAACC,CAAM;IAAA;IAAA;MAC5B,IAAI;QACA,MAAI,CAACC,KAAK,SAAS,MAAI,CAACT,WAAW,CAACU,oBAAoB,CAACF,CAAC,CAACG,KAAK,CAAC;QACjEC,OAAO,CAACC,GAAG,CAAC,MAAI,CAACJ,KAAK,CAAC;OAC1B,CAAC,OAAMJ,GAAQ,EAAE;QACd,MAAI,CAACJ,aAAa,CAACK,KAAK,CAACD,GAAG,CAAC;;IAChC;EACL;EAEaS,YAAY,CAACN,CAAM;IAAA;IAAA;MAC5B,IAAI;QACAA,CAAC,CAACG,KAAK,CAACI,MAAM,KAAK,CAAC,GACd,MAAI,CAACN,KAAK,GAAG,EAAE,GACf,MAAI,CAACA,KAAK,SAAS,MAAI,CAACT,WAAW,CAACgB,gBAAgB,CAACR,CAAC,CAACG,KAAK,CAAC;OACtE,CAAC,OAAMN,GAAQ,EAAE;QACd,MAAI,CAACJ,aAAa,CAACK,KAAK,CAACD,GAAG,CAAC;;IAChC;EACL;EAEaY,cAAc,CAACC,EAAU;IAAA;IAAA;MAClC,IAAI;QACA,MAAM,MAAI,CAAClB,WAAW,CAACmB,UAAU,CAACD,EAAE,CAAC;QACrC,MAAI,CAACjB,aAAa,CAACmB,OAAO,CAAC,wBAAwB,CAAC;QACpD,MAAMC,KAAK,GAAG,MAAI,CAACZ,KAAK,CAACa,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKN,EAAE,CAAC;QACvD,MAAI,CAACT,KAAK,CAACgB,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;OAC9B,CAAC,OAAMhB,GAAQ,EAAC;QACb,MAAI,CAACJ,aAAa,CAACK,KAAK,CAACD,GAAG,CAACqB,OAAO,CAAC;;IACxC;EACL;;AA3CS5B,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX1BlC,2BAAK;MAEWA,kCAAkB;MAAAA,iBAAQ;MAExCA,iCAAuD;MAAvCA;QAAA,OAAUmC,+BAA2B;MAAA,EAAC;MACpDnC,iCAA0B;MAACA,6BAAY;MAAAA,iBAAS;MAChDA,oEAA6F;MAC/FA,iBAAS;MAETA,6BAAO;MAACA,qDAAoC;MAAAA,iBAAQ;MACpDA,gCAA0D;MAAvCA;QAAA,OAAUmC,+BAA2B;MAAA,EAAC;MAAzDnC,iBAA0D;MAE1DA,+BAAmB;MACjBA,oFAAsG;MACtGA,2BAA2D;MAACA,oDAAkC;MAAAA,iBAAK;;;MARtEA,eAAa;MAAbA,wCAAa;MAObA,eAAQ;MAARA,mCAAQ;MACjCA,eAAsD;MAAtDA,mEAAsD","names":["i0","ListComponent","constructor","dataService","notifyService","ngOnInit","categories","getAllCategories","err","error","handleChange","e","games","getGamesByCategories","value","console","log","handleSearch","length","getGamesBySearch","deleteThisGame","id","deleteGame","success","index","findIndex","g","_id","splice","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\sylva\\OneDrive\\Documents\\GitHub\\Angular-Full-Stack-Practice-\\Frontend\\src\\app\\components\\data-area\\list\\list.component.html","C:\\Users\\sylva\\OneDrive\\Documents\\GitHub\\Angular-Full-Stack-Practice-\\Frontend\\src\\app\\components\\data-area\\list\\list.component.ts"],"sourcesContent":["<div>\n\n  <label for=\"\">Select a category:</label>\n\n  <select name=\"\" (change)=\"handleChange($event.target)\">\n    <option selected disabled> Category... </option>\n    <option *ngFor=\"let category of categories\" [value]=\"category._id\">{{category.name}}</option>\n  </select>\n\n  <label> | Or try searching a specific game: </label>\n  <input type=\"text\" (change)=\"handleSearch($event.target)\">\n\n  <div class=\"cards\">\n    <app-game-card *ngFor=\"let g of games\" [game]=\"g\" (deleteMe)=\"deleteThisGame($event)\"></app-game-card>\n    <h3 [style.display]=\"games.length > 0 ? 'inline' : 'none'\"> The games will be displayed here. </h3>\n  </div>\n  \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport CategoryModel from 'src/app/models/category-model';\nimport GameModel from 'src/app/models/game-model';\nimport { DataService } from 'src/app/services/data.service';\nimport { NotifyService } from 'src/app/services/notify.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n    public constructor(private dataService: DataService, private notifyService: NotifyService) { }\n\n    public categories: CategoryModel[] = [];\n    public games: GameModel[] = [];\n\n    public async ngOnInit() {\n        try {\n            this.categories = await this.dataService.getAllCategories();\n        } catch(err: any) {\n            this.notifyService.error(err);\n        }\n    };\n\n    public async handleChange(e: any){\n        try {\n            this.games = await this.dataService.getGamesByCategories(e.value);\n            console.log(this.games);\n        } catch(err: any) {\n            this.notifyService.error(err);\n        }\n    };\n\n    public async handleSearch(e: any){\n        try {\n            e.value.length === 0 \n                ? this.games = [] \n                : this.games = await this.dataService.getGamesBySearch(e.value);\n        } catch(err: any) {\n            this.notifyService.error(err);\n        } \n    }\n\n    public async deleteThisGame(id: string) {\n        try {\n            await this.dataService.deleteGame(id);\n            this.notifyService.success(\"Game has been deleted.\");\n            const index = this.games.findIndex((g) => g._id === id);\n            this.games.splice(index, 1);\n        } catch(err: any){\n            this.notifyService.error(err.message);\n        }\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}